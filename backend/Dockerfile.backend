########################################################################################
# Stage 1: Install dependencies
FROM python:3.11-slim AS builder

WORKDIR /app

# Copy all Python files and requirements.txt into the container
COPY ./requirements.txt ./

# Install dependencies from requirements.txt
RUN apt-get update && apt install -y build-essential
RUN pip install --no-cache-dir -r requirements.txt

########################################################################################
# Stage 2: Set up the actual application
FROM python:3.11-slim AS runner

WORKDIR /app

# This is for health check by AWS services: ECS, ALB, etc.
RUN apt-get update \
    && apt-get install --no-install-recommends -y ca-certificates libpq-dev curl wget \
    && rm -rf /var/lib/apt/lists/*

# Environment variables for build
ARG HOST=0.0.0.0
ENV HOST=${HOST}
ARG PORT=5000
ENV PORT=${PORT}

# Copy the installed dependencies from the builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy the application files into the container
COPY ./ ./
COPY .env .env

# Expose ports for each backend service
EXPOSE ${PORT}

# Command to run the application
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--access-logfile", "-", "--error-logfile", "-", "--log-level", "info", "--workers", "1", "--worker-class", "gevent", "app:app"]